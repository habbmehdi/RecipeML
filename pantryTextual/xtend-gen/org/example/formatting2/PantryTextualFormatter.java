/**
 * generated by Xtext 2.23.0
 */
package org.example.formatting2;

import MyPantry.Ingredient;
import MyPantry.Mass;
import MyPantry.Pantry;
import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.example.services.PantryTextualGrammarAccess;

@SuppressWarnings("all")
public class PantryTextualFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private PantryTextualGrammarAccess _pantryTextualGrammarAccess;
  
  protected void _format(final Pantry pantry, @Extension final IFormattableDocument document) {
    EList<Ingredient> _ingredient = pantry.getIngredient();
    for (final Ingredient ingredient : _ingredient) {
      document.<Ingredient>format(ingredient);
    }
  }
  
  protected void _format(final Ingredient ingredient, @Extension final IFormattableDocument document) {
    document.<Mass>format(ingredient.getMass());
  }
  
  public void format(final Object ingredient, final IFormattableDocument document) {
    if (ingredient instanceof XtextResource) {
      _format((XtextResource)ingredient, document);
      return;
    } else if (ingredient instanceof Ingredient) {
      _format((Ingredient)ingredient, document);
      return;
    } else if (ingredient instanceof Pantry) {
      _format((Pantry)ingredient, document);
      return;
    } else if (ingredient instanceof EObject) {
      _format((EObject)ingredient, document);
      return;
    } else if (ingredient == null) {
      _format((Void)null, document);
      return;
    } else if (ingredient != null) {
      _format(ingredient, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(ingredient, document).toString());
    }
  }
}
