/*
 * generated by Xtext 2.23.0
 */
package org.textual.formatting2

import RecipeML.Method
import RecipeML.Recipe
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.textual.services.RecipeMLGrammarAccess

class RecipeMLFormatter extends AbstractFormatter2 {
	
	@Inject extension RecipeMLGrammarAccess

	def dispatch void format(Recipe recipe, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (baseIng : recipe.baseings) {
			baseIng.format
		}
		for (method : recipe.methods) {
			method.format
		}
	}

	def dispatch void format(Method method, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (amount : method.uses) {
			amount.format
		}
		for (modIng : method.creates) {
			modIng.format
		}
	}
	
	// TODO: implement for 
}
